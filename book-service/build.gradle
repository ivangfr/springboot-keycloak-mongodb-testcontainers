plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.google.cloud.tools.jib' version '3.2.1'
}

group = 'com.mycompany'
version = '1.0.0'
sourceCompatibility = 11

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    integrationTestImplementation {
        extendsFrom testImplementation
    }
}

repositories {
    mavenCentral()
}

ext {
    set('mapstructVersion', '1.4.2.Final')
    set('lombokMapstructBindingVersion', '0.2.0')
    set('springdocOpenApiVerison', '1.6.9')
    set('keycloakVersion', '18.0.0')
    set('testcontainersVersion', '1.16.3')
    set('openjdkImageVersion', '11.0.15')
    set('dockerImagePrefix', 'ivanfranchin')
}

// adding integration test

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
//		resources.srcDir file('src/integration-test/resources')
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
//		testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
    }
}

task integrationTest(type: Test) {
    group 'springboot-testing'
    description 'Runs the integration tests'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    useJUnitPlatform()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    implementation "org.springdoc:springdoc-openapi-ui:${springdocOpenApiVerison}"
    implementation "org.springdoc:springdoc-openapi-security:${springdocOpenApiVerison}"

    testImplementation "org.keycloak:keycloak-admin-client:${keycloakVersion}"

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    // This dependency is needed so that Mapstruct can work with Lombok 1.18.16
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    implementation platform("org.testcontainers:testcontainers-bom:${testcontainersVersion}")
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mongodb'

    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    integrationTestAnnotationProcessor 'org.projectlombok:lombok'
    integrationTestCompileOnly 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

jib {
    from {
        image = "openjdk:${openjdkImageVersion}"
    }
    to {
        image = "${dockerImagePrefix}/${project.name}:${project.version}"
    }
    container {
        ports = ['8080']
    }
}